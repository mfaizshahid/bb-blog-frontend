import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import QueryProvider from "@/components/QueryClient";

import { ReduxProvider } from "@/components/ReduxProvider";
import InitUser from "@/components/InitUser";
const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" className="h-full">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased h-full`}
      >
        <ReduxProvider>
          <InitUser>
            <QueryProvider>{children}</QueryProvider>
          </InitUser>
        </ReduxProvider>
      </body>
    </html>
  );
}

// User can click a button and then the user will log out
//step 1 create button
//step 2 button triggers function that erases jwt token from localstorage, user object gets cleared from state
//step 3 redirect to login
